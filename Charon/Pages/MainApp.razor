@page "/app/{Table}"
@page "/app"
@inject Charon.Services.EventsService eventService


@if (string.IsNullOrEmpty(Table))
{
    <div>hi</div>
}
else
{
    if (Event != null)
    {
        <div class="row">
            <h3 class="col-sm-8">Event- @Event.Name</h3>
        </div>
        <div class="row">
            <h3 class="col-6 col-sm-3">
                Count:
                @Event.Stats
            </h3>
            <h5>
                <a><b><span class="oi oi-reload" @onclick="OnParametersSetAsync"></span></b></a>
            </h5>
        </div>
        <div class="row">
            @foreach (var i in Enumerable.Range(1, (Event.Users.Count() / PageCount) + 1))
            {
                <button @onclick="()=>{ CurrentPage = i - 1; }"> @i </button>
            }
        </div>
        <div class="row">
            <div class="table-responsive">
                <table class="table">
                    <tr>
                        @foreach (var heading in Event.Users[0].Keys)
                        {
                            <th>
                                @heading
                            </th>
                        }

                    </tr>

                    @for (int i = CurrentPage * PageCount; i < (CurrentPage + 1) * PageCount && i < Event.Users.Count(); i++)
                    {
                        <tr>
                            @foreach (var field in Event.Users[i].Values)
                            {
                                var value = field.ToString();
                                <td class="col-auto">

                                    @if (value.Contains(",") || value.Contains("|"))
                                    {

                                        string[] values = value.Split(',', '|');
                                        foreach (var val in values)
                                        {
                                            @val
                                            <br />
                                        }
                                    }
                                    else
                                    {
                                        @value
                                    }
                                </td>



                            }

                        </tr>
                    }

                </table>
            </div>
        </div>
    }
}


@code {
    [Parameter]
    public string Table { get; set; }
    public Charon.Model.Event Event { get; set; }
    public int PageCount = 50;
    public int CurrentPage = 0;
    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(Table))
        {
            await SelectEvent(Table);
            Event = eventService.SelectedEvent;
            StateHasChanged();
        }
    }

    private async Task SelectEvent(string tableName)
    {
        await eventService.GetEvent(tableName);
    }


}
